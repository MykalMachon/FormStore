name: Publish to NPM

# This workflow can be triggered manually or automatically
# For manual: Go to Actions tab -> Publish to NPM -> Run workflow
# For automatic: Uncomment the 'push' trigger below

on:
  workflow_dispatch:  # Allows manual triggering
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'package.json'  # Only trigger when package.json changes

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Get versions
        id: versions
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PUBLISHED_VERSION=$(npm view $PACKAGE_NAME version 2>/dev/null || echo "0.0.0")

          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "published_version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Check if version exists
        id: version-check
        run: |
          if [ "${{ steps.versions.outputs.package_version }}" = "${{ steps.versions.outputs.published_version }}" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.versions.outputs.package_version }} already published. Skipping publish."
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "New version detected: ${{ steps.versions.outputs.package_version }}"
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.skip == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.skip == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.versions.outputs.package_version }}';
            const packageName = '${{ steps.versions.outputs.package_name }}';

            try {
              await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: `v${version}`,
                name: `v${version}`,
                body: `Release of ${packageName}@${version}\n\nPublished to npm: https://www.npmjs.com/package/${packageName}/v/${version}`,
                draft: false,
                prerelease: false
              });
              console.log(`Created release for v${version}`);
            } catch (error) {
              console.log('Release already exists or could not be created:', error.message);
            }

      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.version-check.outputs.skip }}" = "true" ]; then
            echo "### ℹ️ Publish Skipped" >> $GITHUB_STEP_SUMMARY
            echo "Version ${{ steps.versions.outputs.package_version }} is already published." >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🚀 Published Successfully" >> $GITHUB_STEP_SUMMARY
            echo "- **Package**: ${{ steps.versions.outputs.package_name }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Version**: ${{ steps.versions.outputs.package_version }}" >> $GITHUB_STEP_SUMMARY
            echo "- **NPM**: https://www.npmjs.com/package/${{ steps.versions.outputs.package_name }}/v/${{ steps.versions.outputs.package_version }}" >> $GITHUB_STEP_SUMMARY
          fi
